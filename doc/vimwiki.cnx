*vimwiki.txt*   Vim 里的个人维基(Wiki)

             __   __  ___   __   __  _     _  ___   ___   _  ___             ~
            |  | |  ||   | |  |_|  || | _ | ||   | |   | | ||   |            ~
            |  |_|  ||   | |       || || || ||   | |   |_| ||   |            ~
            |       ||   | |       ||       ||   | |      _||   |            ~
            |       ||   | |       ||       ||   | |     |_ |   |            ~
             |     | |   | | ||_|| ||   _   ||   | |    _  ||   |            ~
              |___|  |___| |_|   |_||__| |__||___| |___| |_||___|            ~


                               版本: 1.2
                               译者: 闲耘™(hotoo.cn[AT]gmail.com)
                                     lizaib(biazil.x[AT]gmail.com)

TODO: 重翻 代办事项及之后部分。

==============================================================================
目录                                                        *vimwiki-contents*

    1. 介绍                          |vimwiki|
    2. 安装条件                      |vimwiki-prerequisites|
    3. 映射                          |vimwiki-mappings|
        3.1. 全局映射                |vimwiki-global-mappings|
        3.2. 局部映射                |vimwiki-local-mappings|
        3.3. 文本对象                |vimwiki-text-objects|
    4. 命令                          |vimwiki-commands|
        4.1. 全局命令                |vimwiki-global-commands|
        4.2. 局部命令                |vimwiki-local-commands|
    5. Wiki 语法                     |vimwiki-syntax|
        5.1. 字体                    |vimwiki-syntax-typefaces|
        5.2. 词条                    |vimwiki-syntax-links|
        5.3. 标题                    |vimwiki-syntax-headers|
        5.4. 段落                    |vimwiki-syntax-paragraphs|
        5.5. 列表                    |vimwiki-syntax-lists|
        5.6. 表格                    |vimwiki-syntax-tables|
        5.7. 预格式化文本            |vimwiki-syntax-preformatted|
        5.8. 块级引用                |vimwiki-syntax-blockquotes|
        5.9. 注释                    |vimwiki-syntax-comments|
        5.10. 水平分隔线             |vimwiki-syntax-hr|
    6. 折叠/大纲                     |vimwiki-folding|
    7. 占位符                        |vimwiki-placeholders|
    8. 待办事项(TODO)列表            |vimwiki-todo-lists|
    9. 表格                          |vimwiki-tables|
    10. 日记                         |vimwiki-diary|
    11. 选项                         |vimwiki-options|
    12. 帮助                         |vimwiki-help|
    13. 开发者                       |vimwiki-developers|
    14. 版本更新记录                 |vimwiki-changelog|
    15. 许可证                       |vimwiki-license|


==============================================================================
1. 介绍                                                              *vimwiki*

Vimwiki 是一个 Vim 中的个人 wiki -- 一个有它自己的高亮语法和链接的文本文件。

使用 vimwiki 你可以：
    - 组织笔记和想法；
    - 管理待办事项列表；
    - 写文档。

通过按 <Leader>ww （通常是 \ww）键来快速启动，进入 wiki 索引页。默认路径在： >
    ~/vimwiki/index.wiki
<
参考下面示例：

= 我的知识库 =
    * 我的紧急任务(MyUrgentTasks) -- 昨天应该完成的事！！！
    * 古腾堡计划(ProjectGutenberg) -- 强大的好书。
    * 便条簿(ScratchPad) -- 各种临时的东西。


注意：ProjectGutenberg, MyUrgentTasks 和 ScratchPad 将高亮成“错误”样式。
这些驼峰形式的链接尚不存在。（驼峰形式就是两个以大写字母开头的单词组合成一个词）

将光标放置在 ProjectGutenberg 上并按回车(<Enter>)键，你将进入
ProjectGutenberg ，编辑并保存它，然后按退格键(<Backspace>)可以回到上一个 wiki
文件。你现在就会看到不同了 -- ProjectGutenberg 高亮为一个链接。


==============================================================================
2. 安装条件                                            *vimwiki-prerequisites*

确保你的 vimrc 文件中有如下的设置： >
    set nocompatible
    filetype plugin on
    syntax on

离开这些设置 Vimwiki 将不能正常工作。


==============================================================================
3. 映射                                                     *vimwiki-mappings*

下面是 vimwiki 的全局和局部映射。

------------------------------------------------------------------------------
3.1. 全局映射                                        *vimwiki-global-mappings*

[count]<Leader>ww 或者 <Plug>VimwikiIndex
        打开第 [count] 个 wiki 索引文件。

        <Leader>ww 从 |g:vimwiki_list| 打开第一个 wiki。
        1<Leader>ww 同上，从 |g:vimwiki_list| 打开第一个 wiki。
        2<Leader>ww 从 |g:vimwiki_list| 打开第二个 wiki。
        3<Leader>ww 从 |g:vimwiki_list| 打开第三个 wiki。
        依此类推：
        重映射： >
        :map <Leader>w <Plug>VimwikiIndex
<
更多可以参考|:VimwikiIndex


[count]<Leader>wt 或者 <Plug>VimwikiTabIndex
        在新标签页中打开 第 [count] 个 wiki 索引文件。

        <Leader>wt 在标签页中打开 |g:vimwiki_list| 中的第一个 wiki。
        1<Leader>wt 同上，在标签页中打开 |g:vimwiki_list| 中的第一个 wiki。
        2<Leader>wt 在标签页中打开 |g:vimwiki_list| 中的第二个 wiki。
        3<Leader>wt 在标签页中打开 |g:vimwiki_list| 中的第三个 wiki。
        依此类推：
        重映射： >
        :map <Leader>t <Plug>VimwikiTabIndex
<
参考 |:VimwikiTabIndex|


<Leader>ws 或者 <Plug>VimwikiUISelect
        List and select available wikies.
        列出可选择的 wiki 列表。
        重映射： >
        :map <Leader>wq <Plug>VimwikiUISelect
<
参考|:VimwikiUISelect|


[count]<Leader>wi 或者 <Plug>VimwikiDiaryIndex
        打开第 [count] 个 wiki 项目的日记首页。

        <Leader>wi 打开 |g:vimwiki_list| 中第一个 wiki 项目的日记首页。
        1<Leader>wi 同上。
        2<Leader>wi 打开 |g:vimwiki_list| 中第二个 wiki 项目的日记首页。
        依此例推。
        可以重映射： >
        :map <Leader>i <Plug>VimwikiDiaryIndex

参考 |:VimwikiDiaryIndex|


[count]<Leader>w<Leader>w 或者 <Plug>VimwikiMakeDiaryNote
        打开今天第 [count] 个 wiki 日记文件。

        <Leader>w<Leader>w 从 |g:vimwiki_list| 中打开今天第一个 wiki 日记文件。
        1<Leader>w<Leader>w 同上，从 |g:vimwiki_list| 中打开今天第一个 wiki 日记文件。
        2<Leader>w<Leader>w 从 |g:vimwiki_list| 中打开今天第二个 wiki 日记文件。
        3<Leader>w<Leader>w 从 |g:vimwiki_list| 中打开今天第三个 wiki 日记文件。
        依此类推：
        重映射： >
        :map <Leader>d <Plug>VimwikiMakeDiaryNote
<
参考 |:VimwikiMakeDiaryNote|


[count]<Leader>w<Leader>t 或者 <Plug>VimwikiTabMakeDiaryNote
        在新标签页中打开今天第 [count] 个 wiki 日记文件。

        <Leader>w<Leader>t 在标签页中打开|g:vimwiki_list|中的第一个 wiki 日记文件。
        1<Leader>w<Leader>t 同上。
        2<Leader>w<Leader>t 在标签页中打开|g:vimwiki_list|中的第二个 wiki 日记文件。
        3<Leader>w<Leader>t 在标签页中打开|g:vimwiki_list|中的第三个 wiki 日记文件。
        依此类推。
        重映射： >
        :map <Leader>dt <Plug>VimwikiTabMakeDiaryNote
<
参考 |:VimwikiTabMakeDiaryNote|


------------------------------------------------------------------------------
3.2. 局部映射（本地映射）

NORMAL MODE                                           *vimwiki-local-mappings*
(普通模式)
                        *vimwiki_<Leader>wh*
<Leader>wh              转换当前 wiki 页面为 HTML。
                        映射到 |:Vimwiki2HTML|
                        重映射： >
                        :map <Leader>wc <Plug>Vimwiki2HTML
<
                        *vimwiki_<Leader>whh*
<Leader>whh             转换当前 wiki 页面为 HTML 并在浏览器中打开。
                        映射到 |:Vimwiki2HTML|
                        重映射： >
                        :map <Leader>wcc <Plug>Vimwiki2HTMLBrowse
<
                        *vimwiki_<CR>*
<CR>                    进入（必要时创建新的） Wiki 词条。
                        映射到 |:VimwikiFollowLink| 。
                        重映射： >
                        :map <Leader>wf <Plug>VimwikiFollowLink
<
                        *vimwiki_<S-CR>*
<S-CR>                  水平分栏窗口中进入（必要时创建新的） Wiki 词条。
                        一些终端中可能无效。重映射可以解决。
                        映射到 |:VimwikiSplitLink| 。
                        重映射： >
                        :map <Leader>we <Plug>VimwikiSplitLink
<
                        *vimwiki_<C-CR>*
<C-CR>                  垂直分栏窗口中进入（必要时创建新的） Wiki 词条。
                        一些终端中可能无效。重映射可以解决。
                        映射到 |:VimwikiVSplitLink| 。
                        重映射： >
                        :map <Leader>wq <Plug>VimwikiVSplitLink
<
                        *vimwiki_<C-S-CR>*    *vimwiki_<D-CR>*
<C-S-CR>, <D-CR>        进入（必要时创建新的） wiki 词条，在新的 tab
                        页中打开。
                        一些终端中可能无效。重映射可以解决。
                        映射到 |:VimwikiTabnewLink|.
                        重映射： >
                        :map <Leader>wt <Plug>VimwikiTabnewLink
<
                        *vimwiki_<Backspace>*
<Backspace>             回到上一个 Wiki 词条。
                        映射到|:VimwikiGoBackLink|。
                        重映射： >
                        :map <Leader>wb <Plug>VimwikiGoBackLink
<
                        *vimwiki_<Tab>*
<Tab>                   寻找并将光标定位到本页的下一个 Wiki 词条。
                        映射到 |:VimwikiNextLink| 。
                        重映射： >
                        :map <Leader>wn <Plug>VimwikiNextLink
<
                        *vimwiki_<S-Tab>*
<S-Tab>                 寻找并将光标定位到本页的上一个 Wiki 词条。
                        映射到 |:VimwikiPrevLink| 。
                        映射到： >
                        :map <Leader>wp <Plug>VimwikiPrevLink
<
                        *vimwiki_<Leader>wd*
<Leader>wd              删除光标所在的 Wiki 词条。
                        映射到 |:VimwikiDeleteLink| 。
                        重映射： >
                        :map <Leader>dd <Plug>VimwikiDeleteLink
<
                        *vimwiki_<Leader>wr*
<Leader>wr              重命名光标所在的 Wiki 词条。
                        映射到|:VimwikiRenameLink|。
                        重映射： >
                        :map <Leader>rr <Plug>VimwikiRenameLink
<
                        *vimwiki_<C-Space>*
<C-Space>               切换列表项的开关（选中/反选）
                        （译注：<C-Space> 是中文输入法切换热键，可以参考下面的
                          重映射方法，不过 <leader>tt 也是插件 tasklist.vim 的
                          热键。）
                        映射到 |:VimwikiToggleListItem|。
                        重映射： >
                        :map <leader>tt <Plug>VimwikiToggleListItem
<                       参考 |vimwiki-todo-lists|。

                        *vimwiki_=*
=                       增加标题级别，如果需要则创建标题。
                        vimwiki 里是没有缩进命令 '==' 的，所以请确定是否需要
                        '=' 命令。

                        *vimwiki_-*
-                       降低标题级别。


                        *vimwiki_gqq*  *vimwiki_gww*
gqq                     格式化表格。
 或                     如果你在没有切换插入模式和普通模式的情况下改变了表格内容，
gww                     这个可以重新格式化表格。


                        *vimwiki_<A-Left>*
<A-Left>                向左移动表格的当前列。
                        参考 |:VimwikiTableMoveColumnLeft|
                        重映射： >
                        :map <Leader>wtl <Plug>VimwikiTableMoveColumnLeft
<
                        *vimwiki_<A-Right>*
<A-Right>               向右移动表格当前列。
                        参考 |:VimwikiTableMoveColumnRight|
                        重映射： >
                        :map <Leader>wtr <Plug>VimwikiTableMoveColumnRight
<
                        *vimwiki_<C-Up>*
<C-Up>                  如果可以，打开上一个日记词条。
                        参考 |:VimwikiDiaryPrevDay|

                        *vimwiki_<C-Down>*
<C-Down>                如果可以，打开下一个日记词条。
                        参考 |:VimwikiDiaryNextDay|


仅在 |g:vimwiki_use_mouse| 设置为 1 的情况下有效。
<2-LeftMouse>           双击鼠标进入（必要时创建新的） Wiki 词条。

<S-2-LeftMouse>         水平分栏窗口中进入（必要时创建新的） Wiki 词条。

<C-2-LeftMouse>         垂直分栏窗口中进入（必要时创建新的） Wiki 词条。

<RightMouse><LeftMouse> 返回到上一个 Wiki 词条。

注意： <2-LeftMouse> 即仅双击左键。



INSERT MODE                                           *vimwiki-table-mappings*
(插入模式)
                        *vimwiki_i_<CR>*
<CR>                    转到表格单元格的下一行，如果在最后一行则创建新的一行。


                        *vimwiki_i_<Tab>*
<Tab>                   转到下一个表格单元格，如果在最后一个单元格，则创建新的
                        一行。



                        *vimwiki_i_<S-CR>*
<S-CR>                  插入 <br /> 并回车换行。


------------------------------------------------------------------------------
3.3. 文本对象                                          *vimwiki-text-objects*

ah                      两个连续标题之间的片段，包含尾部的空行。
ih                      两个连续标题之间的片段，不包含尾部的空行。

你可以使用 'vah' 来选择片段包含的内容，或者使用 'dah' 来删除、或者可以用
'yah' 来复制、或者也可以使用 'cah' 来修改这个片段。

a\                      表格中的一整个单元格（包括单元格边框）。
i\                      表格单元格内部。
ac                      表格的一列（包括列边框）。
ic                      表格列的内部。


==============================================================================
4. 命令                                                     *vimwiki-commands*

------------------------------------------------------------------------------
4.1. 全局命令                                        *vimwiki-global-commands*

*:VimwikiIndex*
    打开当前 wiki 的索引文件。

*:VimwikiTabIndex*
    在新标签页中打开当前 wiki 的索引文件。

*:VimwikiUISelect*
    打开所选择的 wiki 索引文件。

*:VimwikiDiaryIndex*
    打开当前 wiki 项目的日记首页。

*:VimwikiMakeDiaryNote*
    打开当前 wiki 中今天的 wiki 日记文件。

*:VimwikiTabMakeDiaryNote*
    在新标签页中打开当前 wiki 中今天的 wiki 日志文件。


------------------------------------------------------------------------------
4.2. 局部命令                                         *vimwiki-local-commands*

*:VimwikiFollowLink*
    进入（必要时创建新的） Wiki 词条。


*:VimwikiGoBackLink*
    返回到跳转过来的上一个 Wiki 词条。


*:VimwikiSplitLink*
    在垂直分栏窗口中进入（必要时创建新的） Wiki 词条。


*:VimwikiVSplitLink*
    在水平分栏窗口中进入（必要时创建新的） Wiki 词条。

*:VimwikiTabnewLink*
    在新的 tab 页中进入（必要时创建新的） wiki 词条。

*:VimwikiNextLink*
    寻找并将光标定位到当前页的下一个 Wiki 词条。


*:VimwikiPrevLink*
    寻找并将光标定位到当前页的上一个 Wiki 词条。


*:VimwikiGoto*
    跳转到指定词条。例如： >
        :VimwikiGoto HelloWorld
<   打开或创建 HelloWorld wiki 页面。


*:VimwikiDeleteLink*
    删除当前所在的 Wiki 词条。


*:VimwikiRenameLink*
    重命名当前所在的 Wiki 词条。


*:Vimwiki2HTML*
    将当前所在的 wiki 页面转换成 HTML 页面。

*:Vimwiki2HTMLBrowse*
    转换当前 wiki 词条为 HTML 页面，并在浏览器中打开。

*:VimwikiAll2HTML*
    将所有的 wiki 词条转换成 HTML。


*:VimwikiToggleListItem*
    切换列表项的开关（选中/反选）
    参考 |vimwiki-todo-lists|.


*:VimwikiSearch* /pattern/
*:VWS* /pattern/
    在当前 wiki 中搜索 /pattern/。
    使用 |:lopen| 命令显示所有匹配项。
    使用 |:cnext| 命令显示下一个匹配项。
    使用 |:cprevious| 命令显示上一个匹配项。


*:VimwikiTable*
    创建一个 5 列 2 行的表格。

    :VimwikiTable cols rows
    创建一个指定列数和行数的表格。

    :VimwikiTable cols
    创建一个指定列数和 2 行的表格。


*:VimwikiTableMoveColumnLeft* , *:VimwikiTableMoveColumnRight*
    向左或向右移动当前列：
    例如： >

    | head1  | head2  | head3  | head4  | head5  |
    |--------+--------+--------+--------+--------|
    | value1 | value2 | value3 | value4 | value5 |


    光标在 'head1' 之上。
    :VimwikiTableMoveColumnRight

    | head2  | head1  | head3  | head4  | head5  |
    |--------+--------+--------+--------+--------|
    | value2 | value1 | value3 | value4 | value5 |

    光标在 'head3' 之上。
    :VimwikiTableMoveColumnLeft

    | head2  | head3  | head1  | head4  | head5  |
    |--------+--------+--------+--------+--------|
    | value2 | value3 | value1 | value4 | value5 |
<

    命令已分别映射到 <A-Left> 和 <A-Right> 快捷键上。


*:VimwikiGenerateLinks*
    插入所有可用的词条到当前缓冲区。


*:VimwikiDiaryNextDay*
    如果可以，打开下一个日记词条。
    映射到 <C-Down>

*:VimwikiDiaryPrevDay*
    如果可以，打开上一个日记词条。
    映射到 <C-Up>。


==============================================================================
5. Wiki 语法                                                  *vimwiki-syntax*

这里有许多不同的 wiki， 许多情况下它们有自己的语法，vimwiki 也不例外。默认的
vimwiki 语法是 google 的 wiki 语法标记的子集。

MediaWiki 语法文件包含在这个发行版之中（不包含 MediaWiki 原始语法中那些花里胡哨
的部分）。
参考 |vimwiki-option-syntax|。


------------------------------------------------------------------------------
5.1. 字型                                           *vimwiki-syntax-typefaces*

下面简单给了一些用来控制修饰文本字型的语法： >
  *粗体文本*
  _斜体文本_
  ~~删除线~~
  `代码 (无语法) 文本`
  上标^脚本^
  下标,,脚本,,

------------------------------------------------------------------------------
5.2. 词条                                               *vimwiki-syntax-links*

内部链接~
WikiWords: >
  CapitalizedWordsConnected

你可以通过在前面加感叹号的方式来防止驼峰式 Wiki 词条。 >
  !CapitalizedWordsConnected

或者通过 |g:vimwiki_camel_case| 参数来完全禁用驼峰式 Wiki 词条。

词条里带空格时： >
  [[This is a link]]
或： >
  [[链接源地址|链接描述]]
或： >
  [[链接源地址][链接描述]]


外部链接~
纯链接： >
 http://code.google.com/p/vimwiki
 mailto:habamax@gmail.com
 ftp://vim.org

带描述的链接： >
 [http://habamax.ru/blog habamax 的主页]
 [mailto:habamax@gmail.com 联系 Maxim Kim]

图片及图片链接~
图片链接可以链接到以 jpg, png 或 gif 为后缀的链接的文件。
纯图片链接： >
 http://someaddr.com/picture.jpg
在 HTML 中即： >
 <img src="http://someaddr.com/picture.jpg" />

本地图片链接： >
 [[images/pabloymoira.jpg]]
在 HTML 中即： >
 <img src="images/pabloymoira.jpg" />
图片的路径（例如 images/pabloymoira.jpg）是相对于
|vimwiki-option-path_html|的。

双中括号内的图片链接： >
 [[http://habamax.ru/blog/wp-content/uploads/2009/01/2740254sm.jpg]]
在 HTML 中即： >
 <img src="http://habamax.ru/ ... /.jpg" />

双中括号内带描述信息的图片链接： >
 [[http://habamax.ru/blog/wp-content/uploads/2009/01/2740254sm.jpg|dance]]
在 HTML 中即： >
 <a href="http://habamax.ru/ ... /.jpg">dance</a>

双中括号内带备用信息的图片链接： >
 [[http://habamax.ru/blog/wp-content/uploads/2009/01/2740254sm.jpg|dance|]]
在 HTML 中即: >
 <img src="http://habamax.ru/ ... /.jpg" alt="dance"/>

双中括号内带备用信息和一些样式的图片链接： >
 [[http://helloworld.com/blabla.jpg|cool stuff|width:150px; height: 120px;]]
在 HTML 中即： >
 <img src="http://helloworld.com/ ... /.jpg" alt="cool stuff"
 style="width:150px; height:120px"/>

双中括号内带样式，但不带备用信息的图片链接： >
 [[http://helloworld.com/blabla.jpg||width:150px; height: 120px;]]
在 HTML 中即： >
 <img src="http://helloworld.com/ ... /.jpg" alt=""
 style="width:150px; height:120px"/>

缩略图链接： >
 [http://someaddr.com/bigpicture.jpg http://someaddr.com/thumbnail.jpg]
或 >
 [[http://someaddr.com/bigpicture.jpg|http://someaddr.com/thumbnail.jpg]]
在 HTML 中即： >
 <a href="http://someaddr.com/ ... /.jpg">
  <img src="http://../thumbnail.jpg /></a>


------------------------------------------------------------------------------
5.3. 标题                                             *vimwiki-syntax-headers*

= 1 级标题 =~
默认情况下，所有的标题都将使用 |hl-Title| 的样式风格来高亮。

== 2 级标题 ==~
你可以为每个标题级别设置不同的颜色： >
  :hi VimwikiHeader1 guifg=#FF0000
  :hi VimwikiHeader2 guifg=#00FF00
  :hi VimwikiHeader3 guifg=#0000FF
  :hi VimwikiHeader4 guifg=#FF00FF
  :hi VimwikiHeader5 guifg=#00FFFF
  :hi VimwikiHeader6 guifg=#FFFF00
为 6 个标题级别，或任何一个标题级别都不设置颜色。

=== 3 级标题 ===~
==== 4 级标题 ====~
===== 5 级标题 =====~
====== 6 级标题 ======~


你可以让标题在 HTML 中居中，只要在第一个 '=' 之前加入空格即可：
                     = 居中的 1 级标题 =~


------------------------------------------------------------------------------
5.4. 段落                                          *vimwiki-syntax-paragraphs*

段落就是从第 1 列开始（无缩进）的行组成的块，段落间以一个空行分隔：

这是第一个
带有两行的段落。

这是一个带有
两行的段落。

------------------------------------------------------------------------------
5.5. 列表                                               *vimwiki-syntax-lists*

无序列表： >
  * 符号列表项 1
  * 符号列表项 2
    * 符号列表子项 1
    * 符号列表子项 2
    * 等等 ...
      * 等等 ...
      * ...
    * 符号列表子项 3
    * 等等。
或： >
  - 符号列表项 1
  - 符号列表项 2
    - 符号列表子项 1
    - 符号列表子项 2
    - 等等 ...
      - 等等 ...
      - ...
    - 符号列表子项 3
    - 等等。

或者混合使用： >
  - 符号列表项 1
  - 符号列表项 2
    * 符号列表子项 1
    * 符号列表子项 2
    * 等等 ...
      - 等等 ...
      - ...
    * 符号列表子项 3
    * 等等。

有序列表 >
  # 编号列表项 1
  # 编号列表项 2
    # 编号列表子项 1
    # 编号列表子项 2
    # 等等 ...
      # 等等 ...
      # ...
    # 编号列表子项 3
    # 等等。

也可以混合使用符号列表和编号列表： >
  * 符号列表项 1
  * 符号列表项 2
    # 编号列表子项 1
    # 编号列表子项 2

注意 *, - 或 # 之后的空格是必须的。

多行列表项： >
  * 符号列表项 1
    列表项 1 的续行。
    列表项 1 的更多续行。
  * 符号列表项 2
    * 符号列表子项 1
      列表子项 1 续行
      列表子项 1 更多续行。
    * 符号列表子项 2
    * 等等。

定义列表： >
术语 1:: 定义 1
术语 2::
:: 定义 2
:: 定义 3
（译注：这里可能有缩进错误）


------------------------------------------------------------------------------
5.6. 表格                                              *vimwiki-syntax-tables*

表格是每个单元格有竖线分隔符 | 构成的内容，你也可以在表格单元格中插入其他内联
的 wiki 语法，包括字体样式和链接。
例如： >

 | 年   | 最低温度 | 最高温度 |
 |------+------------+--------|
 | 1900 | -10      | 25       |
 | 1910 | -15      | 30       |
 | 1920 | -10      | 32       |
 | 1930 | _N/A_    | _N/A_    |
 | 1940 | -2       | 40       |
>

下面的这部分，在 html 中高亮为表头样式： >
 | 年   | 最低温度 | 最高温度 |
 |------+----------+----------|
<

如果表格被缩进，在 HTML 页面中这个表格会居中。

如果在单元格中写入 >，这个单元格会被合并到左边的列中。
如果在单元格中输入 \/，这个单元格会被合并到上面一行。
例如： >

 | a  | b  | c | d |
 | \/ | e  | > | f |
 | \/ | \/ | > | g |
 | h  | >  | > | > |
>

关于如何管理表格的详细信息，可以参考 |vimwiki-tables|。

备注： 你可以在表格中使用 [[链接地址|描述信息]] 的链接类型，
或使用 [[链接地址][描述信息]] 来替代。


------------------------------------------------------------------------------
5.7. 预格式化文本                                *vimwiki-syntax-preformatted*

使用 {{{ 和 }}} 来定义预格式化文本块：
{{{ >
  Tyger! Tyger! burning bright
   In the forests of the night,
    What immortal hand or eye
     Could frame thy fearful symmetry?
  In what distant deeps or skies
   Burnt the fire of thine eyes?
    On what wings dare he aspire?
     What the hand dare sieze the fire?
}}}


你也可以添加附加信息到 {{{ 标签： >
{{{class="brush: python" >
 def hello(world):
     for x in range(10):
         print("Hello {0} number {1}".format(world, x))
}}}

导出的 HTML 结果是： >
 <pre class="brush: python">
 def hello(world):
     for x in range(10):
         print("Hello {0} number {1}".format(world, x))
 </pre>

这就可以使用类似 google syntax highlighter 这样的 js
代码着色器这样有用的工具了。

可以设置 vimwiki 来高亮预格式化代码片段。
参考 |vimwiki-option-nested_syntaxes|

------------------------------------------------------------------------------
5.8. 块级引用                                     *vimwiki-syntax-blockquotes*

以 4 个以上空格开始的文本，就是一个引用块。

    这在 vimwiki 中是一个引用块，它在 vim 中不会被高亮，但是可以使用 CSS
    样式表让它在 HTML 中高亮，块级引用通常用来引用其他来源的较长文本片段。

------------------------------------------------------------------------------
5.9. 注释                                            *vimwiki-syntax-comments*

以 %% 开始的文本是一个注释。
例如： >
 %% this text would not be in HTML
<

------------------------------------------------------------------------------
5.10. 水平分隔行                                           *vimwiki-syntax-hr*

以 4 个或更多的横线开始的行会被当作一个水平分隔行(<hr />)： >
 ----
<

==============================================================================
6. 代码折叠/大纲                                             *vimwiki-folding*

Vimwiki 可以根据标题和列表项来折叠或显示大纲。

例如：
= 我的当前任务 =
  * [ ] 做某事 1
    * [ ] 做某事的子步骤 1.1
    * [ ] 做某事的子步骤 1.2
      * [ ] 做某事的子步骤 1.2.1
      * [ ] 做某事的子步骤 1.2.2
    * [ ] 做某事的子步骤 1.3
  * [ ] 做某事 2
  * [ ] 做某事 3

击 |zM| 键：
= 我的当前任务 = [8] --------------------------------------~

击 |zr| 键：
= 我的当前任务 =~
  * [ ] 做某事 1 [5] --------------------------------------~
  * [ ] 做某事 2~
  * [ ] 做某事 3~

击 |zr| 键更多次：
= 我的当前任务 =~
  * [ ] 做某事 1~
    * [ ] 做某事的子步骤 1.1~
    * [ ] 做某事的子步骤 1.2 [2] -------------------------------~
    * [ ] 做某事的子步骤 1.3~
  * [ ] 做某事 2~
  * [ ] 做某事 3~

备注： 如果是使用默认语法，仅在使用 |shiftwidth| 来缩进时，列表项的折叠
才会正常工作。对于 MediaWiki 来说，* 和 # 都应该放在第一列。

设置 |g:vimwiki_folding| 来启用/禁用折叠。

==============================================================================
7. 占位符                                               *vimwiki-placeholders*

------------------------------------------------------------------------------
%toc 目录                            *vimwiki-toc* *vimwiki-table-of-contents*

从某个 wiki 生成 HTML 时，可以添加目录到 HTML 页面中。
只需要输入 >

    %toc

到 wiki 页面。
还可以给“目录”添加标题： >

    %toc 目录

或者 >

    %toc 随便啥


------------------------------------------------------------------------------
%title 页面的标题(title)

为 wiki 页面生成 HTML 时，默认使用文件名做为标题。
如果希望使用另一个标题，在 wiki 页面中加入： >

    %title My books
<

------------------------------------------------------------------------------
%nohtml                                                       *vimwiki-nohtml*

如果不希望 wiki 被转为 html 页面， wiki 中输入： >

    %nohtml

------------------------------------------------------------------------------
%template                                                   *vimwiki-template*

要应用一个 wiki 词条转换成 HTML 使用的模板， wiki 中输入： >
    %template name
<
更多内容参考 |vimwiki-option-template_path|。


==============================================================================
8. 待办事项列表(Todo lists)                               *vimwiki-todo-lists*

可以(使用 Vimwiki)来做待办事项列表 -- 一个可以切换选中/反选的项目列表。

参考如下示例：
= 可切换的待办列表项 =
  * [X] 切换列表项开/关。
    * [X] 简单的在 [ ] 和 [X] 之间切换。
    * [X] 所有的列表子项将被适当的切换为开/关。
    * [X] 仅当当前行是列表项时，切换子项。
    * [X] 父列表项将受子列表项的切换影响。
  * [X] 同样支持编号列表项的切换。
  * [X] 添加高亮到列表项的复选框。
  * [X] 使用 o, O 和 <CR> 创建新行时，新列表项会带 [ ]。(译注：<CR>没有带 [ ])


在第一个列表项按 <C-Space> 会切换所有的子项：
(译注：<C-Space> 一般是中文输入法的热键，可以自定义键盘映射)
= 可切换的待办列表项 =
  * [ ] 切换列表项开/关。
    * [ ] 简单的在 [ ] 和 [X] 之间切换。
    * [ ] 所有的列表子项将被适当的切换为开/关。
    * [ ] 仅当当前行是列表项时，切换子项。
    * [ ] 父列表项将受子列表项的切换影响。
  * [X] 同样支持编号列表项的切换。
  * [X] 添加高亮到列表项的复选框。
  * [X] 使用 o, O 和 <CR> 创建新行时，新列表项会带 [ ]。

在第三个列表项是按 <C-Space> 将切换自身和其父项：
= 可切换的待办列表项 =
  * [.] 切换列表项开/关。
    * [ ] 简单的在 [ ] 和 [X] 之间切换。
    * [X] 所有的列表子项将被适当的切换为开/关。
    * [ ] 仅当当前行是列表项时，切换子项。
    * [ ] 父列表项将受子列表项的切换影响。
  * [ ] 同样支持编号列表项的切换。
  * [ ] 添加高亮到列表项的复选框。
  * [ ] 使用 o, O 和 <CR> 创建新行时，新列表项会带 [ ]。

父项会受子项的切换影响，[ ] 中的符号与子项百分比对照如
（也可参考 |g:vimwiki_listsyms| ）：
    [ ] -- 0%
    [.] -- 1-33%
    [o] -- 34-66%
    [O] -- 67-99%
    [X] -- 100%

在可视模式下，可以批量切换多个列表项。


==============================================================================
9. 表格                                                       *vimwiki-tables*

使用 :VimwikiTable 命令默认创建 5 列 2 行的表格： >

 |   |   |   |   |   |
 |---+---+---+---+---|
 |   |   |   |   |   |
<

表格会自动格式化，我们先加些文本到第一个表格单元中： >

 | 姓氏  |   |   |   |   |
 |---+---+---+---+---|
 |   |   |   |   |   |
<

无论按 <TAB>, <CR> 还是离开插入模式，表格都将被格式化： >
(译注 I：<TAB> 键会与其他使用 <TAB> 键的脚本(如snipMate)冲突，可以重新映射其他
热键；
译注 II：0.9.9及之前版本对于双宽字符的格式化有问题，1.0 beta之后有修正。)
>
 | 姓氏 |   |   |   |   |
 |------+---+---+---+---|
 |      |   |   |   |   |
<

你可以轻易的创建看起来不错的文本风格的表格，只需要按 <TAB> 键并输入新值： >

 | 姓氏       | 名字       | 年龄 | 城市       | 电子邮件             |
 |------------+------------+------+------------+----------------------|
 | Vladislav  | Pokrishkin | 31   | 莫斯科     | vlad_pok@smail.com   |
 | James      | Esfandiary | 27   | 伊斯坦布尔 | esfandiary@tmail.com |
<

格式化表格可以使用 'gqq' 快捷键。



==============================================================================
10. 日记                                                      *vimwiki-diary*

日记功能可帮助你记录日常笔记，你能够非常容易地将分类的日记添加至Vimwiki中，
只要按下<Leader>w<Leader>w，即可以当前的日期为名来创建新的笔记，
这个新创建的笔记文件，会保存在diary目录中。

现在，你可以参考下面示例来创建你的日记：
  今天是2010-01-27。

  按 \w\w 打开日记首页。
  ~/vimwiki/diary.wiki is created.

  2 把下面几行添加到 ~/vimwiki/diary/diary.wiki 文件中
  = Diary =
  | [[2010-01-27]] |

  ~/vimwiki/diary/2010-01-27.wiki is created.
  这样，就生成了以当前日期命中的 wiki 日记文件，你可在这个日记中记录事项了。
  要是你没做键盘映射，你可在Vim命令模式执行 :VimwikiMakeDiaryNote，
  也可以进入日记页。
  -------------------------------------------

  撰写第二天的日记
  按 \w\w 。

  打开~/vimwiki/diary/diary.wiki文件后，在 = Diary = 下的第一行增加第二天
  的日期即可。

  = Diary =
  | [[2010-01-28]] | [[2010-01-27]] |

  ~/vimwiki/diary/2010-01-28.wiki is created.
  这样，就创建第二天的日记了，你可以添加信息在这个日记中。.
>
默认情况下在一行创建4个链接，所有的链接都以日期进行分类的。


集成日历功能                                                *vimwiki-calendar*
------------------------------------------------------------------------------
如果你已经安装了Calendar.vim插件，你可以使用它来创建笔记。
在命令模式执行:Calendar，并按<Enter>键，会在diary目录创建以当前日期为名
.Wiki文件。
嗯，这种方式创建的日记比前面的方法好多了。

Calendar.vim的插件，你可以在这下载：
http://www.vim.org/scripts/script.php?script_id=52


参考 |g:vimwiki_use_calendar| 选项用来启用/禁用日历。


==============================================================================
11. 选项                                                      *vimwiki-options*

可以通过全局或者每个 wiki (局部)的选项来设置 vimwki，所有的全局选项都使用
如下模板来设置： >
    let g:option_name=option_value
<
你可以参考下面的 |g:vimwiki_list| 说明与实例，在_vimrc文件中配置相关参数。

------------------------------------------------------------------------------
*g:vimwiki_list* *vimwiki-multiple-wikies*

一般形式： >
  {'option1': 'value1', 'option2: 'value2', ...}
<
请参考下面的例子： >
  let g:vimwiki_list = [{'path': '~/my_site/', 'path_html': '~/public_html/'}]
<
打开Vimwiki时会定向到 ~/my_site/ 目录，而生成的网页文件会储存在 ~/public_html/
目录。

下一个例子： >
  let g:vimwiki_list = [{'path': '~/my_site/', 'path_html': '~/public_html/'},
            \ {'path': '~/my_docs/', 'ext': '.mdox'}]
<
在上面的示例中，第二行表示增加了 2 个 wiki，第二个会定向至 ~/my_docs/
的目录，文件后缀是 .mdox。

在 g:vimwiki_list 设置空目录，其选项为如下： >
  let g:vimwiki_list = [{},
            \ {'path': '~/my_docs/', 'ext': '.mdox'}]
<
[注] 译者的设置如下： >
      let g:vimwiki_list = [{'path': 'F:/File/My Dropbox/VimWiki/A0.WikiIndex/',
    \ 'path_html': 'F:/File/My Dropbox/VimWiki/Z0.OutHtml',
    \ 'html_header': 'F:/File/My Dropbox/VimWiki/Z0.Template/header.tpl',}]
<

你也可以用 |Dictionary| 分隔来创建多个 Wiki。 >

    let wiki_1 = {}
    let wiki_1.path = '~/my_docs/'
    let wiki_1.html_template = '~/public_html/template.tpl'
    let wiki_1.nested_syntaxes = {'python': 'python', 'c++': 'cpp'}

    let wiki_2 = {}
    let wiki_2.path = '~/project_docs/'
    let wiki_2.index = 'main'

    let g:vimwiki_list = [wiki_1, wiki_2]

<

PER WIKI OPTIONS                                         *viwmiki-local-options*
(局部 WIKI 选项)


*vimwiki-option-path*
------------------------------------------------------------------------------
选项             缺省值
path            ~/vimwiki/

描述
定向至Wiki文件夹：
  let g:vimwiki_list = [{'path': '~/my_site/'}]


*vimwiki-option-path_html*
------------------------------------------------------------------------------
选项             缺省值
path_html       ~/vimwiki_html/

描述
wiki 转换为 HTML 网页格式的模板文件目录： >
  let g:vimwiki_list = [{'path': '~/my_site/',
                       \ 'path_html': '~/my_site_html/'}]
<

如果省略 path_html 选项，默认使用 path 所在的路径，去除后缀的斜线("/")而加上
"_html"，例如下面的示例： >
  let g:vimwiki_list = [{'path': '~/okidoki/'}]

path_html 将被设置为 '~/okidoki_html/'。

*vimwiki-option-auto_export*
------------------------------------------------------------------------------
选项            缺省值            值~
auto_export     0                 0, 1

描述
执行保存 wiki 页时，若设置此项值为 1 时，将自动生成 HTML 文件： >
  let g:vimwiki_list = [{'path': '~/my_site/', 'auto_export': 1}]
<
这会使你的HTML文件保持最新的！

*vimwiki-option-index*
------------------------------------------------------------------------------
选项            缺省值
index           index

描述
wiki的首页名
  let g:vimwiki_list = [{'path': '~/my_site/', 'index': 'main'}]

注意: 不要包含文件扩展名！


*vimwiki-option-ext*
------------------------------------------------------------------------------
选项             缺省值
ext             .wiki

描述
wiki文件扩展名
  let g:vimwiki_list = [{'path': '~/my_site/',
                       \ 'index': 'main', 'ext': '.document'}]


*vimwiki-option-syntax*
------------------------------------------------------------------------------
选项            缺省值            值
syntax          default           default, media

描述
Wiki语法加色
你可以使用不同的标记语言(当前缺省的为 vimwiki 与 MediaWiki 的语法标记)，
但只有在 Vimwiki 的默认语法才支持转换成 HTML。
使用 MediaWiki 的标记： >
  let g:vimwiki_list = [{'path': '~/my_site/', 'syntax': 'media'}]
<

*vimwiki-option-template_path*
------------------------------------------------------------------------------
选项            缺省值
template_path   ~/vimwiki/templates/

描述
设置 html 模板文件目录：
  let g:vimwiki_list = [{'path': '~/my_site/',
          \ 'template_path': '~/public_html/templates/',
          \ 'template_default': 'def_template',
          \ 'template_ext': '.html'}]

可能有一堆模板： >
    def_template.html
    index.html
    bio.html
    person.html
等等。

模板内容看起来像下面这样： >
    <html>
    <head>
        <link rel="Stylesheet" type="text/css" href="%root_path%style.css" />
        <title>%title%</title>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    </head>
    <body>
        <div class="content">
        %content%
        </div>
    </body>
    </html>

变量说明
  %title% 将被替换为 wiki 的文件名或者 |vimwiki-title|
  %root_path% 显示根目录的相对路径。
                例如 wiki 词条为 [[dir1/dir2/dir3/WikiLink]]
                则 %root_path% 会被替换为 '../../../'。

  %content% 将被替换为 wiki 文件的内容。

所有的 wiki 页面都使用默认的模板，除非页面指定了模板。例如 wiki 页面命名为
"Maxim.wiki"，要使用 "person.html" 作为模板文件，只需添加如下代码到这个页面： >
    %template person
<

*vimwiki-option-template_default*
------------------------------------------------------------------------------
选项                缺省值
template_default    default

描述
设置默认的模板名字（不带后缀）：

详细内容参考 |vimwiki-option-template_path|。


*vimwiki-option-template_ext*
------------------------------------------------------------------------------
选项                缺省值~
template_ext        .html

描述~
设置模板文件的后缀。

详细内容参考 |vimwiki-option-template_path|。


*vimwiki-option-css_name*
------------------------------------------------------------------------------
选项            缺省值
css_name        style.css

描述
设置 CSS 文件名： >
  let g:vimwiki_list = [{'path': '~/my_pages/',
          \ 'css_name': 'main.css'}]

或者 >
  let g:vimwiki_list = [{'path': '~/my_pages/',
          \ 'css_name': 'css/main.css'}]
<

*vimwiki-option-maxhi*
------------------------------------------------------------------------------
选项            缺省值            值~
maxhi           1                 0, 1

描述~
不存在 Wiki 词条，即红色高亮标记的关键字，会使操作变慢，比如切换啥的。
如果不想让文件系统总是检查 Wiki 词条，可以将 maxhi 的值设为 0。
例如： >
  let g:vimwiki_list = [{'path': '~/my_site/', 'maxhi': 0}]
<

*vimwiki-option-nested_syntaxes*
------------------------------------------------------------------------------
选项             缺省值           值~
nested_syntaxes {}                成对的高亮关键字，或者vim的文件类型

描述~
你可以在 Vim 显示不同的语言语法高亮，像 C++、Python 等语法高亮。
例如下面在你的 vimrc 中的设置： >
  let wiki = {}
  let wiki.path = '~/my_wiki/'
  let wiki.nested_syntaxes = {'python': 'python', 'c++': 'cpp'}
  let g:vimwiki_list = [wiki]

设置 Python、C++ 高亮: >
    {{{class="brush: python"
    for i in range(1, 5):
        print(i)
    }}}

    {{{class="brush: c++"
    #include "helloworld.h"
    int helloworld()
    {
        printf("hello world");
    }
    }}}

或者： >
    {{{c++
    #include "helloworld.h"
    int helloworld()
    {
        printf("hello world");
    }
    }}}

    {{{python
    for i in range(1, 5):
         print(i)
    }}}



*vimwiki-option-diary_rel_path*
------------------------------------------------------------------------------
选项            缺省值~
diary_rel_path  diary/

描述~
|vimwiki-option-path|的路径用以重新载入日记文件夹。


*vimwiki-option-diary_index*
------------------------------------------------------------------------------
选项            缺省值
diary_index     diary

描述~
diary文件夹用来保存以日期命名的wiki文件，diary文件名可自定义别的文件名。


*vimwiki-option-diary_header*
------------------------------------------------------------------------------
选项            缺省值~
diary_header    Diary

描述~
在 |vimwik-option-diary_index| 中的名称将链接到以日期命名的 wiki 文件。


*vimwiki-option-diary_link_count*
------------------------------------------------------------------------------
Key               Default value~
diary_link_count  4

描述~
每一行显示日期链接的最大数目。
例如:
= Diary =
| [[2010-01-30]] | [[2010-01-29]] | [[2010-01-28]] | [[2010-01-27]] |
| [[2010-01-26]] | [[2010-01-25]] |




GLOBAL OPTIONS                                        *viwmiki-global-options*
(全局选项)

使用: >
    let g:option_name=option_value
来设置。

------------------------------------------------------------------------------
*g:vimwiki_hl_headers*

高亮标题颜色： =Reddish=, ==Greenish==, ===Blueish===

值              描述~
1               使用 VimwikiHeader1-VimwikiHeader6 颜色组来高亮不同级别的标题。
0               使用 |hl-Title| 颜色高亮标题。
缺省值：0


------------------------------------------------------------------------------
*g:vimwiki_hl_cb_checked*

选中列表项可以高亮显示的颜色:

  * [X] 整行高亮，可将选项值设为 1。
  * [ ] 我希望 Vim 可以使用删除线。

值              描述~
1               用组名( |group-name| ) 为 "Comment" 的语法高亮选中的复选框。
0               不要高亮

缺省值: 0


------------------------------------------------------------------------------
*g:vimwiki_global_ext* *vimwiki-temporary-wiki*

如果一个扩展名是 wiki 的文件被打开，而它有所在的目录不在 |g:vimwiki_list| 列表中，
则：

值              描述~
1               标记这个目录为临时wiki.
0               不标记这个目录为临时wiki.

临时 wiki 会扫描文件系统，高亮可用的链接。

如果你的 wiki 后缀是 .txt，则可以使用如下设置 >
    let g:vimwiki_global_ext = 0
会让 g:vimwiki_list 中的路径文本文件被视为 vimwiki 文件，而其他的文本文件则
不会。

缺省值: 1


------------------------------------------------------------------------------
*g:vimwiki_upper* *g:vimwiki_lower*

这会影响词条的检测。
在默认情况下，词条会检测使用英语、俄语的字母。
你可以设置为自己的: >
  let g:vimwiki_upper = "A-Z\u0410-\u042f"
  let g:vimwiki_lower = "a-z\u0430-\u044f"


------------------------------------------------------------------------------
*g:vimwiki_auto_checkbox*

如果开启，创建复选框会触发列表项目。.

值              描述~
0               不要创建复选框。
1               创造复选框。

缺省值: 1

例如:
执行 <C-Space> (|:VimwikiToggleListItem|) 在一个列表项没有复选框来创建它： >
  * List item
结果: >
  * [ ] List item


------------------------------------------------------------------------------
*g:vimwiki_menu*

用 GUI 菜单来选择可用的 wiki。

值                 描述~
''                 没有菜单
'Vimwiki'          顶层菜单"Vimwiki"
'Plugin.Vimwiki'   "Vimwiki" 子菜单的顶层菜单 "Plugin" 等。

缺省值: 'Vimwiki'

------------------------------------------------------------------------------
*g:vimwiki_stripsym*

更改脚本符号 -- 在Windows你不能使用 /*?<>" 作为文件名，所以 vimwiki 替换它们为
自然符号。( _ 是缺省) ：
    let g:vimwiki_stripsym = '_'

你可以将它更改为空格，例子： >
    let g:vimwiki_stripsym = ' '

------------------------------------------------------------------------------
*g:vimwiki_badsyms*

你可能不喜欢文件名中包含空格（就像其他 vimwiki 用户一样），如果这样，你可以
设置将那些坏字符转换为指定的字符
|g:vimwiki_stripsym|: >
    let g:vimwiki_badsyms = ' '

现在所有的 [[links with spaces]] 将被创建类似 'links_with_spaces' 这样的文件。

这个选项是 |g:vimwiki_stripsym| 的一个补充。

------------------------------------------------------------------------------
*g:vimwiki_listsyms*

列表复选框中 5 个字符的字符串（译注：用来表示列表项的完成度）。
默认值是 ' .oOX'。

g:vimwiki_listsyms[0] 是完成 0% 的项。
g:vimwiki_listsyms[4] 是完成 100% 的项。

------------------------------------------------------------------------------
*g:vimwiki_use_mouse*

从 |vimwiki-local-mappings| 处使用局部鼠标映射。

值              描述~
0               不使用鼠标映射。
1               使用鼠标映射。

默认值: 0

------------------------------------------------------------------------------
*g:vimwiki_folding*

启用/禁用 vimwiki 的折叠/大纲。 vimwiki 使用 'expr' 折叠方法(foldmethod)，它
很灵活但是性能很低。

值              描述~
0               禁用折叠。
1               启用折叠。

默认值: 0

------------------------------------------------------------------------------
*g:vimwiki_fold_lists*

启用/禁用 折叠子列表项。

值              描述~
0               禁用子列表项的折叠功能。
1               启用子列表项的折叠功能。

默认值: 0

------------------------------------------------------------------------------
*g:vimwiki_fold_trailing_empty_lines*

折叠，或不折叠那些已经折叠的行之间的空行。

值              描述~
0               仅折叠一个空行，其他的空行不折叠。
1               折叠所有的空行。

默认值: 0

------------------------------------------------------------------------------
*g:vimwiki_camel_case*

如果不希望 WikiWord 这样的驼峰式词组作为一个 Wiki 词条，可以更改这个设置。

值              描述~
0               不要将驼峰式词组作为 Wiki 词条。
1               将驼峰式词组作为 Wiki 词条。

默认值: 1

------------------------------------------------------------------------------
*g:vimwiki_list_ignore_newline*

这是与 HTML 相关的选项。
在多行列表项里将换行符转为 <br />。

值              描述~
0               将换行符转为 <br />。
1               忽略换行符。

默认值: 1

------------------------------------------------------------------------------
*g:vimwiki_use_calendar*

针对日历里选中日期，新建或打开已存在的日记 wiki 文件。
参考 |vimwiki-calendar|。

值              描述~
0               不要使用日历。
1               使用日历。

默认值: 1


------------------------------------------------------------------------------
*g:vimwiki_browsers* *VimwikiWeblinkHandler*

你可以使用 Web 浏览器打开一个外部链接。浏览器列表参考 |g:vimwiki_browsers|。

针对 Win32：chrome, opera, firefox 和 explorer。
针对其他系统：opera, firefox 和 konqueror。

列表中第一个可用的浏览器会被用来打开链接。假如你有 opera 和 firefox，并希望
用后者打开链接，只需要： >
 let g:vimwiki_browsers=['C:\Program Files\Firefox\firefox.exe']

或者重定义 VimwikiWeblinkHandler 函数： >
  function! VimwikiWeblinkHandler(weblink)
    let browser = 'C:\Program Files\Firefox\firefox.exe'
    execute '!start "'.browser.'" ' . a:weblink
  endfunction


------------------------------------------------------------------------------
*g:vimwiki_table_auto_fmt*

启用或禁用表格的自动格式化。

值              描述~
0               不要自动格式化表格。
1               自动格式化表格。

默认值: 1


------------------------------------------------------------------------------
*g:vimwiki_w32_dir_enc*

从当前编码(|encoding|)转换目录名称为 'g:vimwiki_w32_dir_enc' 编码。

比如当前编码是 'enc=utf-8' 并且你设置 >
    let g:vimwiki_w32_dir_enc = 'cp1251'
<
则下面带换行符(<CR>)的链接： >
    [[привет/мир]]
>
将从 utf-8 的 'привет' 转换为 cp1251 编码，并使用这个编码的名称创建目录。

默认： ''



------------------------------------------------------------------------------
*g:vimwiki_CJK_length*

使用特殊的方法来计算双宽字符的长度（用来对齐表格单元）。

值              描述~
0               不使用。
1               使用。

默认： 0

注意: Vim73 加入了 |strdisplaywidth| 特性，所以对于 Vim73 用户来说，该选项已过时。


------------------------------------------------------------------------------
*g:vimwiki_dir_link*

这个选项是关于目录链接的操作 -- [[directory/]], [[papers/]] 等等。

值              描述~
''              使用标准的 netrw 插件打开 'directory/' 目录。
'index'         打开 'directory/index.wiki'，如果没有就创建。
'main'          打开 'directory/main.wiki'，如果没有就创建。
等等。

默认: '' (空字符)


------------------------------------------------------------------------------
*g:vimwiki_html_header_numbering*

如果希望 html 中的标题带上自动编号，设置这个选项。

例如： >
    1 Header1
    1.1 Header2
    1.2 Header2
    1.2.1 Header3
    1.2.2 Header3
    1.3 Header2
    2 Header1
    3 Header1
等等。

值              描述~
0               关闭标题的编号。
1               开启标题的编号。编号从一级标题开始。
2               开启标题的编号。彪悍从二级标题开始。
等等。

例如当 g:vimwiki_html_header_numbering = 2: >
    Header1
    1 Header2
    2 Header2
    2.1 Header3
    2.1.1 Header4
    2.1.2 Header4
    2.2 Header3
    3 Header2
    4 Header2
等等。

默认： 0


------------------------------------------------------------------------------
*g:vimwiki_html_header_numbering_sym*

|g:vimwiki_html_header_numbering| 的结束符号。

值              描述~
'.'             点号将被添加到标题编号的后面。
')'             右括号将被添加到标题编号的后面。
等等。

设置有
    let g:vimwiki_html_header_numbering = '.'
的标题将看起来如下： >
    1. Header1
    1.1. Header2
    1.2. Header2
    1.2.1. Header3
    1.2.2. Header3
    1.3. Header2
    2. Header1
    3. Header1


默认: '' (空字符)

------------------------------------------------------------------------------
*g:vimwiki_file_exts*

逗号分隔的文件后缀列表。

考虑到以下链接： [[my_script.php][my script]]。
如果 'php' 后缀在 g:vimwiki_file_exts 中，这个链接在生成 html 文件时，会被
生成为 <a href="my_script.php">>my script</a>。
否则，将被生成为 <a href="my_script.php.html">my script</a> (注意 .html)


默认值： 'pdf,txt,doc,rtf,xls,php,zip,rar,7z,html,gz'


------------------------------------------------------------------------------
*g:vimwiki_valid_html_tags*

可以在 vimwiki 里使用的 html 标签列表，以逗号分隔。

默认值： 'b,i,s,u,sub,sup,kbd,br,hr'


------------------------------------------------------------------------------
*g:vimwiki_user_htmls*

逗号分隔的，没有相应 wiki 文件的 HTML 文件列表，这些文件在 |:VimwikiAll2HTML|
时不会被删除。

缺省值：''

例如：
例如你 vimwiki 的 "path_html" 中有 404.html 和 search.html 文件。设置： >
    let g:vimwiki_user_htmls = '404.html,search.html'
则在 |:VimwikiAll2HTML| 时不会被删除。


------------------------------------------------------------------------------
*g:vimwiki_conceallevel*

在 Vim73 中 |conceallevel| 是针对局部的窗口选项设置，因此，当在新标签页或
新窗口中打开 Vimwiki 缓冲区时，它会被设置为默认值。

Vimwiki 在每次进入 vimwiki 缓冲区时都设置 |conceallevel| 为
g:vimwiki_conceallevel

默认值： 3



==============================================================================
12. 帮助                                                        *vimwiki-help*

非常感谢你们帮助 vimwiki 变得更好！
任何帮助，无论是修正错别字还是代码片段补丁 -- 欢迎一切。

有问题都可以提交到 http://code.google.com/p/vimwiki/issues .


==============================================================================
13. 开发者                                               *vimwiki-developers*

    - Maxim Kim <habamax@gmail.com> 创始人。
    - 其他更多人可以看 http://code.google.com/p/vimwiki/people/list

网址：http://code.google.com/p/vimwiki/
邮件列表：https://groups.google.com/forum/#!forum/vimwiki
Vim 插件：http://www.vim.org/scripts/script.php?script_id=2226


==============================================================================
14. Changelog                                              *vimwiki-changelog*
1.2~
    * Issue 70: Table spanning cell support.
    * Issue 72: Do not convert again for unchanged file. |:VimwikiAll2HTML|
      converts only changed wiki files.
    * Issue 117: |VimwikiDiaryIndex| command that opens diary index wiki page.
    * Issue 120: Links in headers are not highlighted in vimwiki but are
      highlighted in HTML.
    * Issue 138: Added possibility to remap table-column move bindings. See
      |:VimwikiTableMoveColumnLeft| and |:VimwikiTableMoveColumnRight|
      commands. For remap instructions see |vimwiki_<A-Left>|
      and |vimwiki_<A-Right>|.
    * Issue 125: Problem with 'o' command given while at the of the file.
    * Issue 131: FileType is not set up when GUIEnter autocommand is used in
      vimrc. Use 'nested' in 'au GUIEnter * nested VimwikiIndex'
    * Issue 132: Link to perl (or any non-wiki) file in vimwiki subdirectory
      doesn't work as intended.
    * Issue 135: %title and %toc used together cause TOC to appear in an
      unexpected place in HTML.
    * Issue 139: |:VimwikiTabnewLink| command is added.
    * Fix of g:vimwiki_stripsym = '' (i.e. an empty string) -- it removes bad
      symbols from filenames.
    * Issue 145: With modeline 'set ft=vimwiki' links are not correctly
      highlighted when open wiki files.
    * Issue 146: Filetype difficulty with ".txt" as a vimwiki extension.
    * Issue 148: There are no mailto links.
    * Issue 151: Use location list instead of quickfix list for :VimwikiSearch
      command result. Use :lopen instead of :copen, :lnext instead of :cnext
      etc.
    * Issue 152: Add the list of HTML files that would not be deleted after
      |:VimwikiAll2HTML|.
    * Issue 153: Delete HTML files that has no corresponding wiki ones with
      |:VimwikiAll2HTML|.
    * Issue 156: Add multiple HTML templates. See
      |vimwiki-option-template_path|. Options html_header and html_footer are
      no longer exist.
    * Issue 173: When virtualedit=all option is enabled the 'o' command behave
      strange.
    * Issue 178: Problem with alike wikie's paths.
    * Issue 182: Browser command does not quote url.
    * Issue 183: Spelling error highlighting is not possible with nested
      syntaxes.
    * Issue 184: Wrong foldlevel in some cases.
    * Issue 195: Page renaming issue.
    * Issue 196: vim: modeline bug -- syn=vim doesn't work.
    * Issue 199: Generated HTML for sublists is invalid.
    * Issue 200: Generated HTML for todo lists does not show completion status
      the fix relies on CSS, thus your old stylesheets need to be updated!;
      may not work in obsolete browsers or font-deficient systems.
    * Issue 205: Block code: highlighting differs from processing. Inline code
      block {{{ ... }}} is removed. Use `...` instead.
    * Issue 208: Default highlight colors are problematic in many
      colorschemes. Headers are highlighted as |hl-Title| by default, use
      |g:vimwiki_hl_headers| to restore previous default Red, Green, Blue or
      custom header colors. Some other changes in highlighting.
    * Issue 209: Wild comments slow down html generation. Comments are
      changed, use %% to comment out entire line.
    * Issue 210: HTML: para enclose header.
    * Issue 214: External links containing Chinese characters get trimmed.
    * Issue 218: Command to generate HTML file and open it in webbrowser. See
      |:Vimwiki2HTMLBrowse|(bind to <leader>whh)
    * NEW: Added <Leader>wh mapping to call |:Vimwiki2HTML|


1.1.1~
    * FIX: Issue 122: Dot character in vimwiki's directory path isn't escaped.
    * FIX: Issue 123: Where is Vimwiki2HTML and other commands? Sometimes
      filetype is not set up to vimwiki.
    * FIX: Issue 124: Highlight group not found: Normal

1.1~
    * NEW: Issue 57: Make it possible to have pre block inside list item.
    * NEW: Issue 82: Add quick goto command. See |:VimwikiGoto|.
    * NEW: Issue 83: Quick switch in diary. See |:VimwikiDiaryNextDay| and
      |:VimwikiDiaryPrevDay| commands.
    * FIX: Issue 84: Vimwiki rename removed the WikiWord display name.
    * FIX: Issue 85: Errors if you have '~' subdirectory in a wiki directory.
    * FIX: Issue 86: Existed links '[[WikiLink1|Alias1]] | [[WikiLink2]]' are
      highlighted as a single link.
    * FIX: Issue 88: Underline text. See |g:vimwiki_valid_html_tags|.
    * FIX: Issue 92: Wikies in a subdir could be renamed to an empty file.
    * FIX: Issue 93: Use alias name in HTML title. See |vimwiki-title|.
    * FIX: Issue 94: Relative links to PHP files are broken. See
      |g:vimwiki_file_exts| for details.
    * FIX: Issue 96: Closing bracket at the end of weblink shouldn't be a part
      of that link.
    * FIX: Issue 97: Error opening weblink in a browser if it has # inside.
    * FIX: Issue 99: Vim is not responding while opening arbitrary wiki file.
    * FIX: Issue 100: Additional content on diary index page could be
      corrupted.
    * NEW: Issue 101: Customized HTML tags. See |g:vimwiki_valid_html_tags|
    * NEW: Issue 102: Conceal feature usage. See |g:vimwiki_conceallevel|.
    * FIX: Issue 103: Always highlight links to non-wiki files as existed.
    * FIX: Issue 104: vimwiki#nested_syntax needs 'keepend' to avoid contained
      language syntax eat needed '}}}'.
    * FIX: Issue 105: <i_CR> on a todo list item with [ ] doesn't create new
      todo list item.
    * FIX: Issue 106: With MediaWiki syntax <C-Space> on a child todo list
      item produce errors.
    * FIX: Issue 107: With MediaWiki syntax <C-Space> on a list item creates
      todo list item without space between * and [ ].
    * FIX: Issue 110: Syntax highlighting doesn't work for indented codeblock.
    * FIX: Issue 115: Nested Perl syntax highlighting differs from regular
      one.
    * MISC: Many vimwiki commands were renamed from Vimwiki.*Word to
      Vimwiki.*Link. VimwikiGoHome is renamed to VimwikiIndex,
      VimwikiTabGoHome to VimwikiTabIndex.
    * MISC: vimwiki-option-gohome is removed.

1.0~
    * NEW: Issue 41: Table cell and column text objects. See
      |vimwiki-text-objects|.
    * NEW: Issue 42: Commands to move table columns left and right. See
      |:VimwikiTableMoveColumnLeft| and |:VimwikiTableMoveColumnRight|.
    * NEW: Issue 44: <S-Tab> should move cursor to the previous table cell.
    * NEW: Issue 45: It should be possible to indent tables. Indented tables
      are centered in HTML.
    * NEW: Issue 46: Do not htmlize some wiki pages (blacklist). New
      placeholder is added: %nohtml. See |vimwiki-nohtml|.
    * FIX: Issue 47: Lists aren't HTMLized properly.
    * FIX: Issue 48: With autochdir it is impossible to have path_html such as
      'd:\vimwiki\html\'
    * FIX: Issue 49: Table is not HTMLized properly at the end of wiki page.
    * FIX: Issue 50: Inline formatting is not performed in table cells.
    * FIX: Issue 51: Cannot insert '-' (minus) into table cells of the first
      column.
    * FIX: Issue 52: Table cell width is incorrect when double wide characters
      are used (ie. Chinese). Check |g:vimwiki_CJK_length|.
    * NEW: Issue 53: Wiki markup can not nested. (Use links and inline markup
      in Headers).
    * NEW: Issue 54: Highlight for placeholders.
    * NEW: Issue 56: Directory indexes. See |g:vimwiki_dir_link| option and
      |:VimwikiGenerateLinks| command.
    * NEW: Issue 58: HTML new lines with <br />. Could be inserted with <S-CR>
      in insert mode.
    * FIX: Issue 59: List item's text can't be started from *.
    * NEW: Issue 60: Links inside completed gtd-items.
    * NEW: Issue 61: Headers numbering. See |g:vimwiki_html_header_numbering|
      and |g:vimwiki_html_header_numbering_sym| options.
    * FIX: Issue 63: Table cannot have leading empty cells in HTML.
    * FIX: Issue 65: Table separator is not htmlized right if on top of the
      table.
    * FIX: Issue 66: Table empty cells are very small in HTML.
    * FIX: Issue 67: Wrong HTML conversion of multilined list item with bold
      text on the start of next line.
    * FIX: Issue 68: auto-indent problem with langmap.
    * FIX: Issue 73: Link navigation by Tab. "Escaped" wiki-word should be
      skipped for navigation with <tab>.
    * FIX: Issue 75: `code` syntax doesn't display correctly in toc.
    * FIX: Issue 77: Diary index only showing link to today's diary entry
      file for extensions other than '.wiki'.
    * FIX: Issue 79: Further calendar.vim integration -- add sign to calendar
      date if it has corresponding diary page.
    * FIX: Issue 80: Debian Lenny GUI Vim 7.2 has problems with toggling inner
      todo list items.
    * FIX: Issue 81: Don't convert WikiWord as a link in HTML when
      `let g:vimwiki_camel_case = 0`

0.9.9~
    * NEW: Diary. Help in making daily notes. See |vimwiki-diary|. Now you can
      really easy add information into vimwiki that should be sorted out
      later.
    * NEW: Tables are redesigned. Syntax is changed. Now they are
      auto-formattable. You can navigate them with <tab> and <cr> in insert
      mode. See |vimwiki-syntax-tables| and |vimwiki-tables| for more details.
    * NEW: Keyword STARTED: is added.
    * NEW: Words TODO:, DONE:, STARTED:, XXX:, FIXME:, FIXED: are highlighed
      inside headers.
    * FIX: Export to HTML external links with 'file://' protocol. Ex:
      [file:///home/user1/book.pdf my book].
    * FIX: Menu is corrupted if wiki's path contains spaces.
    * FIX: Settings |wrap| and |linebreak| are removed from ftplugin. Add them
      into your personal settings file `.vim/after/ftplugin/vimwiki.vim` if
      needed.
    * NEW: Headers are highlighted in different colors by default.
      See |g:vimwiki_hl_headers| to turn it off.
    * FIX: Issue 40: Links with russian subdirs don't work.
    * NEW: It is now possible to generate HTML files automatically on page
      save. See |vimwiki-option-auto_export|.


0.9.8~
    * NEW: Rename |g:vimwiki_fold_empty_lines| to
      |g:vimwiki_fold_trailing_empty_lines|.
    * NEW: One can use '-' along with '*' to start unordered list item.
    * NEW: List items could be started from the first column.
      As a result some limitations appeared:
        - a space after *, - or # for a list item is mandatory.
        - |g:vimwiki_fold_trailing_empty_lines| if set to 0 folds one trailing
          empty line.
    * NEW: Folding is off by default. Use |g:vimwiki_folding| to enable it.
    * NEW: Speed up vimwiki's folding a bit. Should lag a bit less in a long
      todo lists.
    * NEW: Centered headers. Start header with at least one space to make it
      HTML centered.
    * NEW: Change in default CSS: header's colors.
    * NEW: Vimwiki is aware of |GetLatestVimScripts| now.
    * FIX: Use <del> tag instead of custom <span class="strike"> in HTML.
    * FIX: There are no text styling in htmlized quoted text.
    * FIX: set default value of g:vimwiki_fold_lists to 0 as written in this
      help.
    * FIX: Issue 33: Folded list items have wrong indentation when 'tabs' are
      used.
    * FIX: Issue 34: vimwiki#subdir got wrong dir when VimwikiGet('path') is a
      symbolic link. Thanks lilydjwg for the patch.
    * FIX: Issue 28: todo-list auto-indent enhancement. New item should always
      be unchecked.
    * Issue 36: Change the name of the Search command to VimwikiSearch as it
      conflicts with MultipleSearch. Alias :VWS is also available.
    * NEW: You can generate 'Table of contents' of your wiki page. See
      |vimwiki-toc| for details.

0.9.701~
    * FIX: Issue 30: Highlighting doesn't work for checked list item.

0.9.7~
    * NEW: Default checkbox symbols are changed to [ ], [.], [o], [O], [X].
      You can change them using |g:vimwiki_listsyms| variable.
    * NEW: Color group names are renamed from wikiBold, wikiItalic, etc to
      VimwikiBold, VimwikiItalic, etc.
    * NEW: Open external links in a browser. There are default browsers
      defined in |g:vimwiki_browsers| list. You can also redefine
      |VimwikiWeblinkHandler| function to open weblinks in other programs.
    * NEW: Issue 25: Toggle the states of multiple TODO list items at a time
      (in VISUAL and in VISUAL LINE modes)
    * NEW: Issue 26: Highlight code snippets in vimwiki's pre. See
      |vimwiki-option-nested_syntaxes|. Thanks kriomant.
    * NEW: Issue 27: Automatic garbage deletion from HTML directory.
    * NEW: Save all open vimwiki buffers before export to HTML.
    * NEW: Issue 29: Custom :Search command.
    * NEW: Header text objects are now expandable in VISUAL mode. Tap 'vah' to
      select a header. Tap again 'ah' to expand selection further. Thanks Andy
      Wokula.
    * FIX: Folding settings are reset to vim defaults in a new tab (think of
      \wt) so you cannot hide things in folds.
    * FIX: https links in form of [https://hello.world.com] are not exported
      into HTML. Thanks Saurabh Sarpal for the patch.

0.9.6~
    * NEW: You can have multiline list items. See |vimwiki-syntax-lists|.
    * NEW: You can ignore newlines in multiline list items when do export to
      HTML. See |g:vimwiki_list_ignore_newline| option.
    * NEW: Different checkbox symbols [.], [:], [o] are added. See
      |vimwiki-todo-lists|.
    * NEW: Now there is no longer syntax of preformatted text that is started
      by a whitespace.
    * NEW: Blockquotes. See |vimwiki-syntax-blockquote|.
    * NEW: Per wiki folding option (vimwiki-option-folding) is removed. Global
      |g:vimwiki_folding| and |g:vimwiki_fold_lists| are added.
    * NEW: Due to being quite slow folding of list items is off by default.
      Use |g:vimwiki_fold_lists| to turn it on.
    * NEW: If you want replace some symbols in a wikifilename use
      |g:vimwiki_badsyms| option (Andreas Baldeau).
    * FIX: Command |:VimwikiToggleListItem| doesn't work for one of the two
      wikies opened at the same time with different syntaxes.
    * FIX: Command |:VimwikiToggleListItem| do not switch parent checkboxes if
      there are non-checkbox list items available.
    * FIX: Issue 24: Link error in HTML when write [[one.two.three]].
    * FIX: Rename WikiWord to something with a colon (:) does nasty things.
    * FIX: Command |:VimwikiToggleListItem| do not switch right if there are
      list items without checkboxes in the list.

0.9.5~
    * NEW: Added |g:vimwiki_global_ext| to control creation of temporary
      wikies in dirs that are not listed in |g:vimwiki_list|.
    * NEW: Added |g:vimwiki_hl_headers| to highlight headers with different
      predefined colors.
    * NEW: Checked [X] items are not highlighted with Comment syntax group by
      default. Use |g:vimwiki_hl_cb_checked| to turn it on.
    * NEW: Added new syntax for links: [[link address][link description]].
    * NEW: Added <C-@> allias of <C-Space> mapping for *nix systems.
    * NEW: Added |g:vimwiki_camel_case|. Set it to 0 if you do not want
      CamelCased WikiWords to be linkified.
    * FIX: Links with g:vimwiki_stripsym (default '_') [[My_Link|Text]] are
      not highlighted when created.
    * FIX: indent/vimwiki.vim is obsolete. If you upgrade from previous
      versions remove it. It causes wrong list indentation if noexpandtab is
      set.
    * FIX: If tabs and spaces are used to indent list items HTML export gives
      error. Thanks Klaus Ethgen for report.
    * FIX: Some HTML export fixes.

0.9.4~
    * NEW: Links with directories: [[dir1/dir2/Link|Text]]. Thanks Jie Wu.
    * NEW: Added %root_path% template variable to get relative root dir of
      path_html. See |vimwiki-option-html_header|.
    * FIX: Indent is incorrect for vim without "float" compile option. Thanks
      Julian Kooij.
    * FIX: Convert to HTML doesn't work right with links like [[foo::bar]].
    * FIX: Rename wikiword doesn't work right when rename WikiWord to
      [[WikiWord blablabla]].
    * FIX: Renaming of links with description doesn't work.
    * FIX: Weblinks with commas are not highlighted.
    * MISC: Some changes in default CSS file.

0.9.3~
    * NEW: g:vimwiki_menu option is a string which is menu path. So one can
      use let g:vimwiki_menu = 'Plugin.Vimwiki' to set the menu to the right
      place.
    * NEW: g:vimwiki_fold_empty_lines -- don't or do fold in empty lines
      between headers. See |g:vimwiki_fold_empty_lines|
    * FIX: Encoding error when running vimwiki in Windows XP Japanese.
      Thanks KarasAya.

0.9.2c~
    * FIX: Regression: Export HTML link error with [[Link|Text]].

0.9.2b~
    * FIX: Installation on Linux doesn't work. (Dos line endings in Vimball
      archive file).
    * FIX: Clear out FlexWiki ftplugin's setup. Now you don't have to hack
      filetype.vim to get rid of unexpected ':setlocal bomb' from FlexWiki's
      ftplugin.
    * FIX: When write done: it will show another done: in HTML file.

0.9.2a~
    * FIX: Installation on Linux doesn't work. (Dos line endings in
      autoload/vimwiki_lst.vim and indent/vimwiki.vim).

0.9.2~
    * NEW: Option 'folding' added to turn folding on/off.
    * NEW: Header text object. See |vimwiki-text-objects|.
    * NEW: Add/remove Header levels with '=' and '-'. See |vimwiki_=|.
    * NEW: Vimwiki GUI menu to select available wikies. See |g:vimwiki_menu|.
    * NEW: You can specify the name of your CSS file now. See
      |vimwiki-option-css_name|
    * NEW: You can add styles to image links, see |vimwiki-syntax-links|.
    * FIX: History doesn't work after |VimwikiRenameWord|.
    * FIX: Some of wikipedia links are not correctly highlighted. Links with
      parentheses.
    * MISC: Renamed vimwiki_gtd to vimwiki_lst.

0.9.1~
    * NEW: HTML Table cell text alignment, see |vimwiki-syntax-tables|
    * NEW: Wikipage history simplified. Each vimwiki buffer now holds
      b:vimwiki_prev_word which is list of [PrevWord, getpos()].
    * NEW: If highlight for groups wikiHeader1..wikiHeader6 exist (defined in
      a colorscheme) -- use it. Otherwise use Title highlight for all Headers.
    * FIX: Warn only once if 'html_header' or 'html_footer' does not exist.
    * FIX: Wrong folding for the text after the last nested list item.
    * FIX: Bold and Italic aren't highlighted in tables without spaces
      between || and * or _. ||*bold*||_asdf_ || (Thanks Brett Stahlman)

0.9.0~
    * NEW: You can add classes to 'pre' tag -- |vimwiki-syntax-preformatted|.
      This might be useful for coloring some programming code with external js
      tools like google syntax highlighter.
    * NEW: !WikiPage is not highlighted. It is just a plain word WikiPage in
      HTML, without exclamation mark
    * NEW: Definition lists, see |vimwiki-syntax-lists|.
    * NEW: New implementation of |:VimwikiRenameWord|. CAUTION: It was tested
      on 2 computers only, backup your wiki before use it. Email me if it
      doesn't work for you.
    * FIX: Less than 3 symbols are not highlighted in Bold and Italic.
    * FIX: Added vimwiki autocmd group to avoid clashes with user defined
      autocmds.
    * FIX: Pressing ESC while |:VimwikiUISelect| opens current wiki index
      file.  Should cancel wiki selection.

0.8.3~
    * NEW: <C-Space> on a list item creates checkbox.
    * FIX: With * in the first column, <CR> shouldn't insert more * (default
      syntax).
    * FIX: With MediaWiki's ** [ ], <CR> should insert it on the next line.
    * FIX: HTML export should use 'fileencoding' instead of 'encoding'.
    * FIX: Code cleanup.

0.8.2~
    * DEL: Removed google syntax file.
    * NEW: Default vimwiki syntax is a subset of google's one. Header's has
      been changed from !Header to =Header=. It is easier to maintain only 2
      syntaxes. See |vimwiki-syntax-headers|.
    * NEW: Multiline paragraphs -- less longlines.
    * NEW: Comments. See |vimwiki-syntax-comments|.
    * DEL: Removed setlocal textwidth = 0 from ftplugin.
    * FIX: New regexps for bold, italic, bolditalic.
    * FIX: The last item in List sometimes fold-in incorrectly.
    * FIX: Minor tweaks on default CSS.

0.8.1~
    * NEW: Vimwiki's foldmethod changed from syntax to expr. Foldtext is
      changed to be nicer with folded list items.
    * NEW: Fold/outline list items.
    * NEW: It is possible now to edit wiki files in arbitrary directories
      which is not in g:vimwiki_list's paths. New WikiWords are created in the
      path of the current WikiWord.
    * NEW: User can remap Vimwiki's built in mappings.
    * NEW: Added |g:vimwiki_use_mouse|. It is off by default.
    * FIX: Removed <C-h> mapping.

0.8.0~
    * NEW: Multiple wikies support. A lot of options have been changed, see
      |vimwiki-options|
    * NEW: Auto create directories.
    * NEW: Checked list item highlighted as comment.
    * FIX: Multiple 'set ft=vimwiki' for each buffer disabled. Vimwiki should
      load its buffers a bit faster now.

0.7.1~
    * NEW: <Plug>VimwikiToggleListItem added to be able to remap <C-Space> to
      anything user prefers more.
    * FIX: Toggleable list items do not work with MediaWiki markup.
    * FIX: Changing g:vimwiki_home_html to path with ~ while vimwiki is
      loaded gives errors for HTML export.
    * DEL: Command :VimwikiExploreHome.

0.7.0~
    * NEW: GTD stuff -- toggleable list items. See |vimwiki-todo-lists|.
    * FIX: Headers do not fold inner headers. (Thanks Brett Stahlman)
    * FIX: Remove last blank lines from preformatted text at the end of file.
    * DEL: Removed g:vimwiki_smartCR option.

0.6.2~
    * NEW: [[link|description]] is available now.
    * FIX: Barebone links (ie: http://bla-bla-bla.org/h.pl?id=98) get extra
      escaping of ? and friends so they become invalid in HTML.
    * FIX: In linux going to [[wiki with whitespaces]] and then pressing BS
      to go back to prev wikipage produce error. (Thanks Brendon Bensel for
      the fix)
    * FIX: Remove setlocal encoding and fileformat from vimwiki ftplugin.
    * FIX: Some tweaks on default style.css

0.6.1~
    * FIX: [blablabla bla] shouldn't be converted to a link.
    * FIX: Remove extra annoing empty strings from PRE tag made from
      whitespaces in HTML export.
    * FIX: Moved functions related to HTML converting to new autoload module
      to increase a bit vimwiki startup time.

0.6~
    * NEW: Header and footer templates. See|g:vimwiki_html_header| and
      |g:vimwiki_html_footer|.
    * FIX: |:Vimwiki2HTML| does not recognize ~ as part of a valid path.

0.5.3~
    * FIX: Fixed |:VimwikiRenameWord|. Error when g:vimwiki_home had
      whitespaces in path.
    * FIX: |:VimwikiSplitWord| and |:VimwikiVSplitWord| didn't work.

0.5.2~
    * NEW: Added |:VimwikiGoHome|, |:VimwikiTabGoHome| and
      |:VimwikiExploreHome| commands.
    * NEW: Added <Leader>wt mapping to open vimwiki index file in a new tab.
    * NEW: Added g:vimwiki_gohome option that controls how|:VimwikiGoHome|
      works when current buffer is changed. (Thanks Timur Zaripov)
    * FIX: Fixed |:VimwikiRenameWord|. Very bad behaviour when autochdir
      isn't set up.
    * FIX: Fixed commands :Wiki2HTML and :WikiAll2HTML to be available only
      for vimwiki buffers.
    * FIX: Renamed :Wiki2HTML and :WikiAll2HTML to |:Vimwiki2HTML| and
      |:VimwikiAll2HTML| commands.
    * FIX: Help file corrections.

0.5.1~
    * NEW: This help is created.
    * NEW: Now you can fold headers.
    * NEW: <Plug>VimwikiGoHome and <Plug>VimwikiExploreHome were added.
    * FIX: Bug with {{{HelloWikiWord}}} export to HTML is fixed.
    * DEL: Sync option removed from: Syntax highlighting for preformatted
      text {{{ }}}.

0.5~
    * NEW: vimwiki default markup to HTML conversion improved.
    * NEW: Added basic GoogleWiki and MediaWiki markup languages.
    * NEW: Chinese [[complex wiki words]].

0.4~
    * NEW: vimwiki=>HTML converter in plain Vim language.
    * NEW: Plugin autoload.

0.3.4~
    * FIX: Backup files (.wiki~) caused a bunch of errors while opening wiki
      files.

0.3.3~
    * FIX: [[wiki word with dots at the end...]] didn't work.
    * NEW: Added error handling for delete wiki word function.
    * NEW: Added keybindings o and O for list items when g:vimwiki_smartCR=1.
    * NEW: Added keybinding <Leader>wh to visit wiki home directory.

0.3.2~
    * FIX: Renaming -- error if complex wiki word contains %.
    * FIX: Syntax highlighting for preformatted text {{{ }}}. Sync option
      added.
    * FIX: smartCR bug fix.

0.3.1~
    * FIX: Renaming -- [[hello world?]] to [[hello? world]] links are not
      updated.
    * FIX: Buffers menu is a bit awkward after renaming.
    * NEW: Use mouse to follow links. Left double-click to follow WikiWord,
      Rightclick then Leftclick to go back.

0.3~
    * NEW: Highlight non-existent WikiWords.
    * NEW: Delete current WikiWord (<Leader>wd).
    * NEW: g:vimwiki_smartCR=2 => use Vim comments (see :h comments :h
      formatoptions) feature to deal with list items. (thx -- Dmitry
      Alexandrov)
    * NEW: Highlight TODO:, DONE:, FIXED:, FIXME:.
    * NEW: Rename current WikiWord -- be careful on Windows you cannot rename
      wikiword to WikiWord. After renaming update all links to that renamed
      WikiWord.
    * FIX: Bug -- do not duplicate WikiWords in wiki history.
    * FIX: After renaming [[wiki word]] twice buffers are not deleted.
    * FIX: Renaming from [[wiki word]] to WikiWord result is [[WikiWord]]
    * FIX: More than one complex words on one line is bugging each other when
      try go to one of them. [[bla bla bla]] [[dodo dodo dodo]] becomes bla
      bla bla]] [[dodo dodo dodo.


0.2.2~
    * NEW: Added keybinding <S-CR> -- split WikiWord
    * NEW: Added keybinding <C-CR> -- vertical split WikiWord

0.2.1~
    * NEW: Install on Linux now works.

0.2~
    * NEW: Added part of Google's Wiki syntax.
    * NEW: Added auto insert # with ENTER.
    * NEW: On/Off auto insert bullet with ENTER.
    * NEW: Strip [[complex wiki name]] from symbols that cannot be used in
      file names.
    * NEW: Links to non-wiki files. Non wiki files are files with extensions
      ie [[hello world.txt]] or [[my homesite.html]]

0.1~
    * First public version.

==============================================================================
15. License                                                  *vimwiki-license*

The MIT Licence
http://www.opensource.org/licenses/mit-license.php

Copyright (c) 2008-2010 Maxim Kim

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.



 vim:tw=78:ts=8:ft=help
